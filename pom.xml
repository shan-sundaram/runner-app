<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.ctlts</groupId>
	<artifactId>wf-user-dashboard</artifactId>
	<version>0.0.2-SNAPSHOT</version>
	<name>wf-user-dashboard</name>
	<parent>
		<groupId>com.ctlts</groupId>
		<artifactId>wfaas-maven-parent</artifactId>
		<version>0.0.4</version>
	</parent>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<docker.image.prefix>centurylinktechnology</docker.image.prefix>
	</properties>
	<profiles>
		<profile>
			<id>development</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>exec-maven-plugin</artifactId>
						<groupId>org.codehaus.mojo</groupId>
						<executions>
							<execution>
								<id>NPM Install</id>
								<phase>install</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>npm</executable>
									<arguments>
										<argument>install</argument>
									</arguments>
								</configuration>
							</execution>
							<execution>
								<id>Install Angular</id>
								<phase>install</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>bower</executable>
									<arguments>
										<argument>install</argument>
										<argument>angular</argument>
									</arguments>
								</configuration>
							</execution>
							<execution>
								<id>Install Angular-Route</id>
								<phase>install</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>bower</executable>
									<arguments>
										<argument>install</argument>
										<argument>angular-route</argument>
									</arguments>
								</configuration>
							</execution>
							<execution>
								<id>Install Angular Local Storage</id>
								<phase>install</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>bower</executable>
									<arguments>
										<argument>install</argument>
										<argument>angular-local-storage</argument>
									</arguments>
								</configuration>
							</execution>
							<execution>
								<id>Install BootStrap</id>
								<phase>install</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>bower</executable>
									<arguments>
										<argument>install</argument>
										<argument>bootstrap</argument>
									</arguments>
								</configuration>
							</execution>
							<execution>
								<id>Grunt Build</id>
								<phase>install</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>grunt</executable>
									<arguments>
										<argument>build</argument>
									</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>com.spotify</groupId>
						<artifactId>docker-maven-plugin</artifactId>
						<version>0.2.8</version>
						<executions>
							<execution>
								<id>development-docker-build</id>
								<goals>
									<goal>build</goal>
								</goals>
								<phase>install</phase>
								<configuration>
									<imageName>${docker.image.prefix}/${project.artifactId}</imageName>
									<dockerDirectory>${basedir}</dockerDirectory>
									<registryUrl>${docker.registry.url}</registryUrl>
									<image>${docker.image.prefix}/${project.artifactId}</image>
									<newName>${docker.registry}/${docker.image.prefix}/${project.artifactId}:${project.version}</newName>
								</configuration>
							</execution>
							<execution>
								<id>development-docker-tag</id>
								<goals>
									<goal>tag</goal>
								</goals>
								<phase>install</phase>
								<configuration>
									<imageName>${docker.image.prefix}/${project.artifactId}</imageName>
									<dockerDirectory>${basedir}</dockerDirectory>
									<registryUrl>${docker.registry.url}</registryUrl>
									<image>${docker.image.prefix}/${project.artifactId}</image>
									<newName>${docker.registry}/${docker.image.prefix}/${project.artifactId}:${project.version}</newName>
									<pushImage>true</pushImage>
									<forceTags>true</forceTags>
								</configuration>
							</execution>
							<execution>
								<id>development-docker-tag-latest</id>
								<goals>
									<goal>tag</goal>
								</goals>
								<phase>install</phase>
								<configuration>
									<imageName>${docker.image.prefix}/${project.artifactId}</imageName>
									<dockerDirectory>${basedir}</dockerDirectory>
									<registryUrl>${docker.registry.url}</registryUrl>
									<image>${docker.image.prefix}/${project.artifactId}</image>
									<newName>${docker.registry}/${docker.image.prefix}/${project.artifactId}:latest</newName>
									<pushImage>true</pushImage>
									<forceTags>true</forceTags>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
